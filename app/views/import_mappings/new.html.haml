#table-wrapper
  %p.text-right.close_link_wrapper
    = link_to root_path, class: 'close_link' do
      %i.fi.fi-x

  .grid-x.grid-padding-x
    .large-12.medium-12.small-12.cell
      %hr
      - if flash[:alert]
        .alert.alert-danger
          %p= flash[:alert]

  .alert
    %h3 Invalid Column Names
    %p Some headers in the CSV are not matching the required table structure and the file cannot be imported. Please chose an existing mapping or map the following fields to the correct model properties.

  .large-12.medium-12.small-12.cell
    - if @existing_mappings && !@existing_mappings.empty?
      %label Choose an existing mapping:
      %select#existing_mapping
        %option{ value: '' } Select a mapping
        - @existing_mappings.each do |mapping|
          %option{ value: import_mapping_path(mapping) }= mapping.name
      .button
        %button#show_mapping_button Use Selected Mapping

    = render 'import_mappings/partials/form'

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    const showMappingButton = document.getElementById('show_mapping_button');
    const existingMappingSelect = document.getElementById('existing_mapping');

    showMappingButton.addEventListener('click', function() {
      const selectedValue = existingMappingSelect.value;
      if (selectedValue) {
        window.location.href = selectedValue;
      } else {
        alert('Please select a mapping to view.');
      }
    });

    const form = document.querySelector('form');
    form.addEventListener('submit', function(event) {
      const mappings = [];
      document.querySelectorAll('tbody tr').forEach((row, index) => {
        const header = row.querySelector('td').innerText.trim();
        const modelProperty = row.querySelector('.model-property-select').value;
        const parser = row.querySelector('.parser-input').value;
        mappings.push({ csv_column_name: header, model_property: modelProperty, parser: parser });
      });
      document.getElementById('import_mapping_mapping').value = JSON.stringify(mappings);
    });
  });