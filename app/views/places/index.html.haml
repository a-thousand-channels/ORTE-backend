- content_for(:title) { "Places of #{@layer.title}" }


#table-wrapper
  %p.text-right.close_link_wrapper
    = link_to map_layer_url(@map,@layer), :class=>"close-link", "aria-label"=>"Close back" do
      %span{"aria-hidden"=>"true"}
        %i.fi.fi-x
  %h1
    = link_to map_path(@layer.map) do
      = @layer.map.title
    â€”
    = link_to map_layer_path(@layer.map,@layer) do
      = @layer.title
    %span.shy (with #{@places.count} Places)

  .grid-x.grid-padding-x
    .medium-12.cell
      %p.text-left.hint-simple
        - if @layer.published
          %i.fi-eye.fi-18
          This content of this layer is visible to the public
        - else
          %i.fi-lock.fi-18
          The content of this layer is not public
  .grid-x.grid-padding-x
    .medium-7.cell
      %p.text-left.hint-simple
        Privacy settings for this layer:
      %ul.hint
        %li
          - if @layer.exif_remove
            %i.fi-check.fi-18
            All EXIF data will be removed from uploaded images
          - else
            %i.fi-alert.fi-18
            EXIF data of uploaded images will not be removed
        %li
          - if @layer.rasterize_images
            %i.fi-check.fi-18
            Images will be displayed with a halftone raster
          - else
            %i.fi-alert.fi-18
            All images will be displayed unchanged
      %p.text-left.hint-simple
        You can change these settings
        = link_to edit_map_layer_path(@map,@layer) do
          in the edit mode
    .medium-5.cell
      %p.text-right.hint-simple
        See also:
      %ul.hint
        %li
          = link_to annotations_map_layer_path(@map,@layer) do
            Annotations (about Places)
        %li
          = link_to relations_map_layer_path(@map,@layer) do
            Relations (between places)
        %li
          = link_to images_map_layer_path(@map,@layer) do
            All Images of this layer
  %p
    &nbsp;
  %table
    %thead
      %tr
        %th Place
        %th
          &nbsp;

    %tbody
      - @places.sort_by{ |e| e.startdate.nil? ? Date.new : e.startdate }.each do |place|
        %tr
          %td
            = smart_date_display(place.startdate, place.enddate)
            %p.show-for-small-only
              = smart_date_display(place.startdate, place.enddate)
            - images = Image.preview(place.id)
            - if images.count > 0
              - images.each do |img|
                - begin
                  - if img.attached?
                    %p
                    - if img.place.layer.rasterize_images  && img.itype == 'image'
                      = image_tag img.variant(resize: "250x250", "ordered-dither": "h4x4a").processed, title: img.title, alt: img.alt
                    - else
                      = image_tag img.variant(resize: "250x250").processed, title: img.title, alt: img.alt
                      %br
                      %small.nowrap
                        #{img.title}
                        - if img.alt.present?
                          %i.fi-info{title: img.alt}
                - rescue
                  %p.shy (Image missing)
            %h4
              - if place.uid.present?
                = place.uid
                \&mdash;
              = link_to map_layer_place_path(place.layer.map,place.layer,place) do
                = place.title
              - if place.published
                %i.fi-eye.fi-21{title: 'Published'}
              - else
                %i.fi-lock.fi-21{title: 'Not published'}
              - if place.featured
                %i.fi-star.fi-21{title: 'Feature'}
            - if place.subtitle.present?
              %p= place.subtitle
            %p
              = link_to place.link do
                = place.link
            %p
              = place.location
              %br
              = place.address
              %br
              = place.zip
              = place.city

            - if place.annotations && place.annotations.count > 0
              %p
                = link_to map_layer_place_path(place.layer.map,place.layer,place) do
                  #{place.annotations.count} Annotations
            - if place.tags
              %p
                - place.tags.each do |tag|
                  %span.label.secondary.tag
                    = link_to map_tag_path(@map,tag) do
                      %i.fi-price-tag
                      = tag.name
            %p.shy.text-left
              - if place.lat
                #{place.lat[0..6]}, #{place.lon[0..5]}
              \|
              Created at
              
              - if place.created_at == place.updated_at
                #{l(place.created_at)}
              - else
                #{l(place.created_at)}, edited at #{l(place.updated_at)}

          %td
            = link_to edit_map_layer_place_path(place.layer.map,place.layer,place), :class => "button small" do
              %i.fi-pencil.fi-21
              Edit
            %br
            - images = Image.where(place_id: place.id)
            - if images.count > 0
              %i.fi-photo.fi-21
              = images.count
              Images
              %br
            - videos = Video.where(place_id: place.id)
            - if videos.count > 0
              %i.fi-projection-screen.fi-21
              = videos.count
              Videos
              %br
            = link_to new_map_layer_place_image_path(place.layer.map,place.layer,place), :class => "button small" do
              %i.fi-plus.fi-21
              Image
            %br
            = link_to new_map_layer_place_video_path(place.layer.map,place.layer,place), :class => "button small" do
              %i.fi-plus.fi-21
              Video
            - if admin? && current_user.group.title == 'Admins'
              %br
              = link_to clone_map_layer_place_path(place.layer.map,place.layer,place), :class => 'button small secondary', :title=>'Make a copy of this place and change it' do
                %i.fi-page-copy.fi-21
                Copy
            %br
            - if place.images.count > 0 || place.videos.count > 0
              - warning = 'Are you sure to delete this place and all attached images and/or videos?'
            - else
              - warning = 'Are you sure to delete this place?'
            = link_to map_layer_place_path(place.layer.map,place.layer,place), method: :delete, data: { confirm:warning }, :class => "button alert small" do
              %i.fi-trash.fi-21
              Destroy
