- content_for(:title) { "#{@place.title} — #{@place.layer.title}" }

#info-wrapper{:data => { 'url' => "/maps/#{@map.id}/layers/#{@layer.id}/places/#{@place.id}.json", 'map_id' => "#{@map.id}", 'layer_id' => "#{@layer.id}" }}

  %p.text-right.close_link_wrapper
    = link_to map_layer_url(@map,@layer), :class=>"close-link", "aria-label"=>"Close back" do
      %span{"aria-hidden"=>"true"}
        %i.fi.fi-x

  .grid-x.grid-padding-x
    - images = Image.sorted_by_place(@place.id)
    - if images.count > 0
      - textcol = 8
      .cell.small-12.medium-12
        
        .orbit{"data-orbit":true}
          .orbit-wrapper
            .orbit-controls
              %button.orbit-previous
                %span.show-for-sr
                  Previous slide
                &#9664;&#xFE0E;
              %button.orbit-next
                %span.show-for-sr
                  Next slide
                &#9654;&#xFE0E;
            %ul.orbit-container          
              - images.each do |img|
                - if img.attached?
                  - filename = ActiveStorage::Blob.service.path_for(img.key)
                  - if File.exist?(filename)
                    - if img.preview.present?
                      %li.orbit-slide{"data-open": "reveal#{img.id}"}
                        %figure.orbit-figure
                          - if img.place.layer.rasterize_images && img.itype == 'image'
                            = image_tag(img.file.variant(resize: "1000x1000", "ordered-dither": "h8x8a").processed, class: "orbit-image", alt: img.alt )
                          - else
                            = image_tag(img.file.variant(resize: "1200x1200").processed, class: "orbit-image", alt: img.alt)

                    - else
                      %li.orbit-slide{"data-open": "reveal#{img.id}"}
                        %figure.orbit-figure
                          - if img.place.layer.rasterize_images && img.itype == 'image'
                            = image_tag(img.file.variant(resize: "1000x1000", "ordered-dither": "h8x8a").processed, class: "orbit-image", alt: img.alt)
                          - else
                            = image_tag(img.file.variant(resize: "1200x1200").processed, class: "orbit-image", alt: img.alt )

                  - else
                    %p
                      No image uploaded, please do so

          - images.each do |img|
            .reveal{id: "reveal#{img.id}", "data-reveal": true, "data-animation-in": "fade-in", "data-animation-out": "fade-out"}
              - if img.file.attached?
                - filename = ActiveStorage::Blob.service.path_for(img.key)
                - if File.exist?(filename)
                  - if img.place.layer.rasterize_images && img.itype == 'image'
                    = image_tag img.file.variant(resize: "1000x1000", "ordered-dither": "h8x8a").processed, alt: img.alt
                  - else
                    = image_tag img.file.variant(resize: "1200x1200").processed, alt: img.alt

                  %button.close-button{"data-close": true, "aria-label": "Close", type: "button"}
                    %i.fi.fi-x{"aria-hidden": true}
              - else
                %p
                  No image uploaded, please do so
    - videos = Video.where(place_id: @place.id)
    - if videos.count > 0
      - textcol = 8
      .cell.small-4.medium-4
        %div
          - videos.each do |video|
            - if video.file.attached?
              - if video.preview.present?
                %p{"data-open": "reveal#{video.id}"}
                  = video_tag video.file.variant(resize: "300x300").processed
              - else
                %p{"data-open": "reveal#{video.id}"}
                  = video_tag url_for(video.file), controls: true, width:150
    - else
      - textcol = 12
    .cell{class: "small-#{textcol} medium-#{textcol}"}
      %p.hint.text-left
        = link_to map_url(@place.layer.map) do
          = @place.layer.map.title
        \—
        = link_to map_layer_url(@place.layer.map,@place.layer) do
          = @place.layer.title

      %p.date
        = smart_date_display(@place.startdate, @place.enddate)
      %h1
        - if @place.uid.present?
          = @place.uid
          \&mdash;
        = @place.title
        = link_to edit_map_layer_place_path(@place.layer.map,@place.layer,@place.id) do
          %i.fi.fi-pencil.fi-24
      - if @place.subtitle.present?
        %p= @place.subtitle
      %div
        %strong
          =h @place.teaser.html_safe
      - if @place.text.present?
        %div
          =h @place.text.html_safe
      %p
        - if @place.link
          =link_to @place.link do
            = @place.link
      - if @place.audio.attached?
        %p
          = audio_tag rails_blob_url(@place.audio), autoplay: true, controls: true
          = link_to @place.audio.filename, rails_blob_path(@place.audio, disposition: "attachment")
      %p
        #{@place.location} #{@place.address}, #{@place.zip} #{@place.city}
      %label Annotations
      %hr.small
      = render 'places/list/annotations'
      %p
        = link_to new_annotation_path(place_id: @place.id), class: 'button' do
          %i.fi.fi-plus
          - if @place.annotations.count > 0
            Add another annotation
          - else
            Add an annotation
      %hr.small
      - if @place.relations_from_ids
        %label Relations
        - @place.relations_froms.each do |r|
          %p
            \⟶
            = r.relation_to.layer.title
            \:
            = link_to map_layer_place_url(r.relation_to.layer.map, r.relation_to.layer, r.relation_to) do
              = r.relation_to.title
            = link_to edit_map_relation_path(@map,r), class: "button small rounded" do
              %i.fi.fi-pencil
              Edit
      %p
        = link_to new_map_relation_path(map_id: @place.layer.map.id, relations_from_id: @place.id), class: 'button' do
          %i.fi.fi-plus
          Add a relation to another place


      - if @place.tag_list
        %hr.small
        %p
          - @place.tags.each do |tag|
            %span.label.secondary.tag
              = link_to map_tag_path(@map,tag) do
                %i.fi-price-tag
                = tag

      %p.hint.text-left
        %b Coordinates:
        #{@place.lat[0..5]}, #{@place.lon[0..5]}
        %b Published:
        - if @place.published
          %i.fi-check.fi-18
        - else
          %i.fi-lock.fi-18
        \|
        %b Last edit:
        = l(@place.updated_at)
