= simple_form_for([@map,@layer,@place]) do |f|
  .grid-x.grid-padding-x
    .large-3.medium-3.cell
      %h1 Place
    .large-4.medium-4.cell
      %div#layer_change
        - if @place.layer.title && params[:action] == 'new'
          %p.inline
            = link_to map_url(@place.layer.map) do
              = @place.layer.map.title
            \>
            = link_to map_layer_url(@place.layer.map,@place.layer) do
              = @place.layer.title
            = f.association :layer, as: :hidden
        - else
          %div.inline#layer_selector.hide
            = f.association :layer, :collection => @place.layer.map.layers, :label_method => :title, :value_method => :id, label: false, include_blank: false
            %span#layer_display_cancel{:title => "Cancel" }
              %i.fi.fi-x.fi-13

          %div.inline#layer_display
            = link_to map_url(@place.layer.map) do
              = @place.layer.map.title
            \>
            = link_to map_layer_url(@place.layer.map,@place.layer), title: "Change layer for this place" do
              = @place.layer.title
            %i.fi.fi-pencil.fi-13{title: "Click to change layer for this place"}
      %p.clear.hint.text-left
        %span.name Address
        - if @old_place
          = @old_place.full_address
          \->
        = @place.full_address
        = @place.city
        %br
        %span.name Coordinates
        - if @old_place
          #{@old_place.lat[0..4]}/#{@old_place.lon[0..4]}
          \-->
        - if @place.lat && @place.lon
          #{@place.lat[0..4]}/#{@place.lon[0..4]}
        = f.input :lat, as: :hidden
        = f.input :lon, as: :hidden

    .large-5.medium-5.cell
      #switch.switch.inline
        %input{:name=>"place[published]", :class => "switch-input", :id => "place_published", :type => "checkbox", :checked => @place.published }
        %label.switch-paddle{:for=>"place_published"}
          %span.show-for-sr
            Publish
          %span.switch-active{:aria-hidden=>"true"} Publish
          %span.switch-inactive{:aria-hidden=>"true"} Publish

      - if params[:action] == 'edit'
        %p#remap.clear
          = link_to map_layer_path(@place.layer.map,@place.layer,remap: true, place_id: @place.id), :class =>"button small", title: "Reposition this place on the map" do
            %strong
              %i.fi.fi-map
              RE-MAP
          &nbsp;
          %i.fi.fi-info{"data-tooltip"=>true, :title=>"With this function you can re-position this entry on the map. Click the button and then click on the map, where you would like to set as the correct place"}
        %p#remap
          = link_to add_new_entry_link(@place), :class =>"button small", title: "Add another entry to the exact same place" do
            %strong
              %i.fi.fi-plus
              Add another entry
          &nbsp;
          %i.fi.fi-info{"data-tooltip"=>true, :title=>"With this function you can add another entry to the exact same place or location. "}
  .grid-x.grid-padding-x
    .large-12.cell
      = f.error_notification
      - if @place.errors.full_messages.present?
        %ul.hide
          = @place.errors.full_messages.each do |item,msg|
            %li= item

      = f.input :title

  .grid-x.grid-padding-x
    .large-6.medium-6.cell
      .form-inputs
        .grid-x
          .large-6.medium-6.small-7.cell
            = f.input :startdate, as: :hidden
            = f.label :startdate_data do
              Start date
              %i.fi.fi-info{"data-tooltip"=>true, :title=>"If you just want to define the year, like \"1995\", type in the date 1.1.1995"}
            = f.input :startdate_date, as: :date, html5: true, :label => false
          .large-6.medium-6.small-5.cell
            = f.input :startdate_time, as: :time, html5: true, :label => 'Start time', :input_html => {:size => 5, class: 'input-time'}
        .grid-x
          .large-6.medium-6.small-7.cell
            = f.input :enddate, as: :hidden
            = f.label :enddate_data do
              End date
              %i.fi.fi-info{"data-tooltip"=>true, :title=>"If you just want to define the year, like \"1995\", type in the date 1.1.1995"}
            = f.input :enddate_date, as: :date, html5: true, :label => false
          .large-6.medium-6.small-5.cell
            = f.input :enddate_time, as: :time, html5: true, :label => 'End time', :input_html => {:size => 5, class: 'input-time'}

        = tinymce
        = f.input :teaser, :label => 'Text', :input_html => {:rows => 8, class: 'large-text tinymce' }
        %hr
        - # = f.input :tag_list, label: 'Tags', input_html: {value: f.object.tag_list.join(", "), placeholder: 'Tags, seperate with comma'}
        = f.input :tag_list, input_html: { class: 'tags', multiple: "multiple",  placeholder: 'Type a tag or select from list' }, collection: @map.places.all_tags, value_method: :name
        %p.hint To add a tag, just type into the field and hit return. You can add multiple tags. If you start typing you will see most used tags as a proposal


    .large-6.medium-6.cell
      .form-inputs
        = f.input :location, :label => 'Name of Location', :input_html => {:placeholder => 'Name' }
        %p.hint Only needed, if the location has different official name
        %hr
        = f.input :address, :input_html => {:placeholder => 'Street + Number' }
        .grid-x.grid-padding-x
          .small-4.cell
            = f.input :zip
          .small-8.cell
            = f.input :city
        = f.input :link, :label => 'Weblink', :placeholder => 'https://'
        %p.hint Does this place (or location) has a website?
        %hr
        - if params[:action] == 'edit'
          %label Images
          = link_to new_map_layer_place_image_path(@place.layer.map,@place.layer,@place), class: 'button' do
            %i.fi.fi-plus
            Add image
        - images = Image.where(place_id: @place.id)
        - if images.count > 0
          %p
            Images
          .grid-x#sortable{data: { map: @place.layer.map.id, layer: @place.layer.id, place: @place.id }}
            - images.order('sorting ASC').each_with_index do |img,i|
              .image.ui-state-default{id: "image_#{img.id}"}
                .image-toolbar
                  = link_to map_layer_place_path(@place.layer.map,@place.layer,@place), class: 'button button-right tiny sortable_handle' do
                    %i.fi-arrows-out
                - if img.preview.present?
                  = link_to map_layer_place_image_path(@place.layer.map,@place.layer,@place,img), class: "thumbnail thumbnail-preview" do
                    = image_tag url_for(img.file)
                - else
                  = link_to map_layer_place_image_path(@place.layer.map,@place.layer,@place,img), class: "thumbnail" do
                    - if img.file.attached?
                      = image_tag url_for(img.file)
                    - else
                      Invalid Image. Please click me and try again.
        %hr
        %label Audio
        - if @place.audio && @place.audio.attached?
          %p
            = link_to rails_blob_path(@place.audio, disposition: 'attachment') do
              = @place.audio.filename
          %p.shy Upload a new file:
        = f.input :audio, as: :file, label: false, required: false, accept: 'audio/mpeg'
        %p.hint Please upload MP3 only
  %hr
  .grid-x
    .large-6.medium-6.small-12.cell
      .form-actions.text-right
        = f.button :submit, :class => "button"
