= simple_form_for([@map, @layer]) do |f|
  .grid-x
    .large-12.cell
      = f.error_notification
  .grid-x
    .large-12.medium-12.cell
      .form-inputs
        %p
          - if admin? && params[:action] == 'edit'
            = f.association :map, collection: Map.by_user(current_user), include_blank: false
          - else
            Map:
            =link_to map_path(@map) do
              #{@map.title}
            = f.association :map, as: :hidden, :input_html => { :value => @map.id }
        %p
          = f.input :title
          = f.input :subtitle
          = tinymce
          = f.input :text, :label => 'Description', :input_html => {:rows => 8, class: 'large-text tinymce' }
          = f.input :credits, :label => 'Credits', :input_html => {:rows => 8, class: 'large-text tinymce' }
        %hr
        .grid-x
          .small-5.cell
            %p
              = f.input :published, :label => 'Publish'
              %span.hint.text-left Set this layers as published
            %p
              = f.input :public_submission, :label => 'Submissions'
              %span.hint.text-left Enable public submissions
            - if @layer.public_submission
              - if @layer.submission_config
                = link_to edit_submission_config_path(@layer.submission_config.id), :class=>"button small" do
                  %i.fi-pencil.fi-24
                  Edit configuration
                - if @layer.submission_config.locales.count > 0
                  %br
                  Submission forms:
                  %br
                  - @layer.submission_config.locales.each do |language|
                    - klass = 'button secondary'
                    = link_to new_submission_path(layer_id: @layer.id, locale: language.to_s), class: "#{klass}", target: '_blank' do
                      %i.fi-web.fi-24
                      - title = @layer.submission_config.title_intro(locale: language)
                      - if title.nil?
                        %i Missing title
                      - else
                        = title
              - else
                = link_to new_submission_config_path(layer_id: @layer.id), :class=>"button" do
                  %i.fi-pencil.fi-24
                  Create submission configuration
          .small-7.cell
            = f.input :image, as: :file, label: 'Image', required: false
        %hr
        %p.compact
          = f.label :color, "Marker color"
        .grid-x
          .small-6.cell
            #preview_color_wrapper
              %svg{id: "layer_color_preview",height:50,width:50,version:"1.1",xmlns:"http://www.w3.org/2000/svg"}
                %circle{cx:"25",cy:"25",r:"25",fill:"#{@layer.color}"}
              = f.input :color, :label => false, :size => 10, :class => "inline"
          .small-6.cell

            - if @colors_selectable
              #another_color_wrapper
                %p.small
                  Select an alternate color:
                %p
                  - @colors_selectable.each do |c|
                    %span{:class=>'another_color',"data-color"=>"#{c}"}
                      %svg{height:24,width:24,version:"1.1",xmlns:"http://www.w3.org/2000/svg"}
                        %circle{cx:"12",cy:"12",r:"12",fill:"#{c}"}

        %hr
        %div.compact
          %label Mapcenter
          %span.hint.text-left Set these values if you want a different map focus then the automatic calculation of all places would give
          .grid-x.grid-padding-x
            .medium-5.cell
              = f.input :mapcenter_lat, label: "Latitude", input_html: { placeholder: '53.0000'}
            .medium-5.cell
              = f.input :mapcenter_lon, label: "Longitude", input_html: { placeholder: '10.0000'}
            .medium-2.cell
              = f.input :zoom, label: "Zoom (1-18)", input_html: { placeholder: '12'}


        %hr
      .form-actions
        %p
          = f.button :submit, :class => "button"