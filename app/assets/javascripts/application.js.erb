// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require jquery.turbolinks
//= require foundation
//= require_tree .
//= require turbolinks
//= require leaflet/dist/leaflet
//= require leaflet-color-markers


$(document).on('turbolinks:load', function() {
  $(function() {
    $(document).foundation();


    // navigate by dropdown
    $('.nav-selector').change(function(e){
      e.preventDefault();
      $(this).parent('form').prop( "disabled", true );
      if ( $(this).val() !== '') {
        var url = $(this).val()
        console.log(url);
        window.location = url;
      }
    });

    // address lookup
    $('form#addresslookup').submit(function(e) {
      e.preventDefault();
    });
    $('form#addresslookup input').on('keypress', function(e) {
        // return e.which !== 13;
        if ( e.which === 13 ) {
          console.log("enter");
          LookupNominatim($('input#addresslookup_address').val(),$('input#addresslookup_address').data('url'));
        } else {
          return;
        }
    });

    $('input#addresslookup_address').change(function(e) {
        e.preventDefault();
        LookupNominatim($(this).val(),$(this).data('url'));
    });
    $('button#addresslookup_button').click(function(e) {
      e.preventDefault();
      var val = $('input#addresslookup_address').val();
      LookupNominatim(val,$('input#addresslookup_address').data('url'));

    });


    // ---------------
    // baselayer map

    var map = L.map('map', {zoomControl: false}).setView([53.55, 9.99], 12);

    //add zoom control with your options
    L.control.zoom({
         position:'topright'
    }).addTo(map);

    var Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
    }).addTo(map);


    // layers: show all places

    if ( $('body').attr('id') === 'layers' )  {
      ShowPlacesForLayer(map,'layers');
    }
    if ( $('body').attr('id') === 'maps' )  {
      // todo: omit/handle layer!
      // each layer different color!
      ShowPlacesForLayer(map,'maps');
    }

    // map click to get latlon

    map.on('dblclick', function(e){
      console.log(e.latlng);
      console.log(e.latlng.lat);
      if ( $('#addresslookup_address').length > 0 ) {
        ReverseLookupNominatim(map,e.latlng,e.latlng.lat,e.latlng.lng,$('#addresslookup_address').data('url'));
      } else {
        console.log("No lookup possible. Please select a map and a layer first");
      }
    });

    // ---------------

    <% if ( Rails.env == "test" ) %>
      // this should be at the very end of this script :) and for test env only!
      $('footer').append("Javascript enabled");
    <% end %>

  });
});

