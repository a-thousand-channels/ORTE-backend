// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
// # require jquery.turbolinks
//= require foundation
//= require_tree .
// # require turbolinks
//= require leaflet/dist/leaflet
//= require leaflet.markercluster/dist/leaflet.markercluster
//= require leaflet-color-markers
//= require tinymce-jquery


// $(document).on('turbolinks:load', function() {
  $(function() {
    $(document).foundation();


    setTimeout(function(){
      $('#flash').slideUp(500);
    }, 2000);

    // select another color (for layers)
    $('.another_color').click(function(e){
      var another_color = $(this).data('color');
      $('input#layer_color').val(another_color);
      $('svg#layer_color_preview > circle').css({ fill: another_color});
      console.log("changed");
    });


    // add nav_bar for marker switch
    /* TODO
    $('#map').before($('<div />').attr('id','marker_bar').attr('class','nav_bar'));
    $('#marker_bar').append($('<div />').attr('id','marker_bar_marker').text('M'));
    $('#marker_bar').append($('<div />').attr('id','marker_bar_text').text('T'));
    $('#marker_bar').append($('<div />').attr('id','marker_bar_image').text('I'));
    $('#marker_bar').find('div').addClass('nav_bar_item');
    $('#marker_bar > div').on('click', function(e){
      console.log($(this));
      if ($(this).attr('id') === 'marker_bar_text') {
        // TODO
      } else if ($(this).attr('id') === 'marker_bar_image') {
        // TODO
      } else {
        // TODO
      }
    });
    */

    // add nav_bar for export function(s)
    $('#map').before($('<div />').attr('id','export_bar').attr('class','nav_bar'));
    $('#export_bar').append($('<div />').attr('id','export_bar_json').attr('title','Export map data as JSON').text('JSON'));
    $('#export_bar').find('div').addClass('nav_bar_item');

    if ( $('#selection').data('map-id') ) {
      $('#export_bar_json').html('<a href="/public/maps/'+$('#selection').data('map-id')+'.json" download="map'+$('#selection').data('map-id')+'.json">JSON</a>');

    } else {
      $('#export_bar_json').html('');

    }



    // navigate by dropdown
    $('.nav-selector').change(function(e){
      e.preventDefault();
      $(this).parent('form').prop( "disabled", true );
      if ( $(this).val() !== '') {
        var url = $(this).val()
        console.log(url);
        window.location = url;
      }
    });

    // address lookup
    $('form#addresslookup').submit(function(e) {
      e.preventDefault();
    });
    $('form#addresslookup input').on('keypress', function(e) {
        // return e.which !== 13;
        if ( e.which === 13 ) {
          console.log("enter");
          LookupNominatim($('input#addresslookup_address').val(),$('input#addresslookup_address').data('url'));
        } else {
          return;
        }
    });

    $('input#addresslookup_address').change(function(e) {
        e.preventDefault();
        LookupNominatim($(this).val(),$(this).data('url'));
    });
    $('button#addresslookup_button').click(function(e) {
      e.preventDefault();
      var val = $('input#addresslookup_address').val();
      LookupNominatim(val,$('input#addresslookup_address').data('url'));

    });


    // places > form: toggle layer dropdown
    $('#layer_display').click(function(e){
      $('#layer_selector').removeClass('hide');
      $('#layer_display').hide();
    });

    // ---------------

    var text_layers = L.featureGroup();
    var image_layers = L.layerGroup();
    var marker_meta_layers = L.layerGroup();

     var overlays = {
        'T': text_layers,
        'I': image_layers,
        'P': marker_meta_layers
    };

    // ---------------
    // baselayer map

    var map = L.map('map', {
        zoomControl: false,
        layers: [marker_meta_layers],
        minZoom: 6,
        maxZoom: 18
    }).setView([53.55, 9.99], 12);


    L.control.layers(overlays).addTo(map);

    //add zoom control with your options
    L.control.zoom({
         position:'topright'
    }).addTo(map);

    var Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    attribution: 'Tiles &copy; Esri <span class="show-for-large">&mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community</a>'
    }).addTo(map);

    // layers: show all places

    if ( $('body').attr('id') === 'layers' )  {
      ShowPlacesForLayer(map,text_layers,image_layers,marker_meta_layers,'layers');

    }
    if ( $('body').attr('id') === 'places' )  {
      ShowPlacesForLayer(map,text_layers,image_layers,marker_meta_layers,'places');

    }
    if ( $('body').attr('id') === 'maps' )  {
      // todo: omit/handle layer!
      // each layer different color!
      ShowPlacesForLayer(map,text_layers,image_layers,marker_meta_layers,'maps');
    }


    // addresslookup_address
    // click on map to get latlon and adress
    map.on('dblclick', function(e){
      console.log(e.latlng);
      console.log(e.latlng.lat);
      // minimize address lookup form
      if ( $('#addresslookup_address').length > 0 ) {
        ClearLookUpField();
        ReverseLookupNominatim(map,e.latlng,e.latlng.lat,e.latlng.lng,$('#addresslookup_address').data('url'));
      } else {
        console.log("No lookup possible. Please select a map and a layer first");
      }
    });

    map.addLayer(marker_meta_layers);






    /* special overlay for treffentotal map */
    /*
    var imageUrl = 'https://map.treffentotal.de/kampnagel_raumplan_by_hand_2000px.png',
        imageBounds = [[53.583839104119935, 10.020486116409304], [53.58267779635204, 10.023055034408571]];
        options =  {opacity: 1, className: 'baselayer', interactive: true, attribution: 'Kampnagel'};
    var kampnagel_map = new L.imageOverlay(imageUrl, imageBounds, options);
    kampnagel_map.addTo(map);*/

    // ---------------

    <% if ( Rails.env == "test" ) %>
      // this should be at the very end of this script :) and for test env only!
      $('footer').append("Javascript enabled");
    <% end %>

  });
// });

function ClearLookUpField() {
      $('#addresslookup_address').addClass('hide');
      $('#addresslookup_address').val('');
      /* disabled
      $('#addresslookup_button i.fi-magnifying-glass').addClass('hide');
      $('#addresslookup_button i.fi-fast-forward').removeClass('hide');
      */
      $('#selection-hint').html("");
      $('#selection-hint').removeClass('active');
};
function ShowLookUpField() {
    $('#addresslookup_address').removeClass('hide');
    /* disabled
    $('#addresslookup_button i.fi-magnifying-glass').removeClass('hide');
    $('#addresslookup_button i.fi-fast-forward').addClass('hide');
    */
    $('.leaflet-popup').hide();
    $('#selection-hint').html("");
    $('#selection-hint').removeClass('active');
}
